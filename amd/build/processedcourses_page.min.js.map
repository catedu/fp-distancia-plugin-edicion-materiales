{"version":3,"file":"processedcourses_page.min.js","sources":["../src/processedcourses_page.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @author 3iPunt <https://www.tresipunt.com/>\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @copyright 3iPunt <https://www.tresipunt.com/>\n */\n\ndefine([\n    'jquery',\n    'core/str',\n    'core/ajax',\n    'core/modal_factory',\n    'core/modal_events',\n    'core/templates',\n    'core/notification'\n], function($, Str, Ajax, ModalFactory, ModalEvents, Templates, Notification) {\n    \"use strict\";\n\n    /**\n     *\n     * @property {string} REPROCESSING_COURSE - Selector for select course for reprocessing\n     */\n    let ACTION = {\n        REPROCESSING_COURSE: '[data-action=\"reprocessing_course\"]',\n    };\n\n    /**\n     *\n     * @property {string} PROCESSEDTABLE - Service for generate Table\n     * @property {string} REPROCESSING - Service for reprocessing course\n     */\n    let SERVICES = {\n        PROCESSEDTABLE: 'local_educaaragon_processed_table',\n        REPROCESSING: 'local_educaaragon_reprocessing'\n    };\n\n    /**\n     *\n     * @property {string} CONTENT_TABLE - Region for all reload\n     * @property {string} TABLE - Region for table reload\n     */\n    let REGION = {\n        CONTENT_TABLE: '[data-region=\"educaaragon-processedcourses\"]',\n        TABLE: '[data-region=\"processedcourses-table\"]'\n    };\n\n    let TEMPLATES = {\n        TABLE: 'local_educaaragon/processedcourses_table',\n        LOADING: 'core/overlay_loading'\n    };\n\n    /**\n     * @constructor\n     * @param {String} selector The selector for the page region containing the page.\n     */\n    function Table(selector) {\n        this.node = $(selector);\n        this.initReprocessingCourse();\n    }\n\n    /** @type {jQuery} The jQuery node for the page region. */\n    Table.prototype.node = null;\n\n    /**\n     * Register event listeners of clicks.\n     */\n    Table.prototype.initReprocessingCourse = function() {\n        this.node.find(ACTION.REPROCESSING_COURSE).on('click', this.reprocessingCourse);\n    };\n\n    Table.prototype.reprocessingCourse = function(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        let courseid = $(e.currentTarget).attr('data-courseid');\n        let stringkeys = [\n            {key: 'reprocessing', component: 'local_educaaragon'},\n            {key: 'reprocessingmsg', component: 'local_educaaragon'},\n            {key: 'reprocess', component: 'local_educaaragon'}\n        ];\n        Str.get_strings(stringkeys).then(function(langStrings) {\n            let title = langStrings[0];\n            let confirmMessage = langStrings[1];\n            let buttonText = langStrings[2];\n            return ModalFactory.create({\n                title: title,\n                body: confirmMessage,\n                type: ModalFactory.types.SAVE_CANCEL\n            }).then(function(modal) {\n                modal.setSaveButtonText(buttonText);\n                modal.getRoot().on(ModalEvents.save, function() {\n                    let identifier = $(REGION.TABLE);\n                    Templates.render(TEMPLATES.LOADING, {visible: true}).done(function(html) {\n                        identifier.append(html);\n                        let request = {\n                            methodname: SERVICES.REPROCESSING,\n                            args: {\n                                courseid: courseid\n                            }\n                        };\n                        Ajax.call([request])[0].done(function() {\n                            let request = {\n                                methodname: SERVICES.PROCESSEDTABLE,\n                                args: {\n                                }\n                            };\n                            Ajax.call([request])[0].done(function(response) {\n                                let template = TEMPLATES.TABLE;\n                                Templates.render(template, response).done(function(html, js) {\n                                    identifier.html(html);\n                                    Templates.runTemplateJS(js);\n                                    location.reload();\n                                });\n                            }).fail(Notification.exception);\n                        }).fail(Notification.exception);\n                    });\n                });\n                modal.getRoot().on(ModalEvents.hidden, function() {\n                    modal.destroy();\n                });\n                return modal;\n            });\n        }).done(function(modal) {\n            modal.show();\n        }).fail(Notification.exception);\n    };\n\n    return {\n        /**\n         * Factory method returning instance of the Table\n         * @param {String} selector The selector for the table region containing the table.\n         * @return {Table}\n         */\n        initClicks: function(selector) {\n            return new Table(selector);\n        }\n    };\n});\n"],"names":["define","$","Str","Ajax","ModalFactory","ModalEvents","Templates","Notification","ACTION","SERVICES","REGION","TEMPLATES","Table","selector","node","initReprocessingCourse","prototype","find","on","this","reprocessingCourse","e","preventDefault","stopPropagation","courseid","currentTarget","attr","get_strings","key","component","then","langStrings","title","confirmMessage","buttonText","create","body","type","types","SAVE_CANCEL","modal","setSaveButtonText","getRoot","save","identifier","render","visible","done","html","append","request","methodname","args","call","response","template","js","runTemplateJS","location","reload","fail","exception","hidden","destroy","show","initClicks"],"mappings":";;;;;AAqBAA,iDAAO,CACH,SACA,WACA,YACA,qBACA,oBACA,iBACA,sBACD,SAASC,EAAGC,IAAKC,KAAMC,aAAcC,YAAaC,UAAWC,kBAOxDC,2BACqB,sCAQrBC,wBACgB,oCADhBA,sBAEc,iCAQdC,aAEO,yCAGPC,gBACO,2CADPA,kBAES,gCAOJC,MAAMC,eACNC,KAAOb,EAAEY,eACTE,gCAITH,MAAMI,UAAUF,KAAO,KAKvBF,MAAMI,UAAUD,uBAAyB,gBAChCD,KAAKG,KAAKT,4BAA4BU,GAAG,QAASC,KAAKC,qBAGhER,MAAMI,UAAUI,mBAAqB,SAASC,GAC1CA,EAAEC,iBACFD,EAAEE,sBACEC,SAAWvB,EAAEoB,EAAEI,eAAeC,KAAK,iBAMvCxB,IAAIyB,YALa,CACb,CAACC,IAAK,eAAgBC,UAAW,qBACjC,CAACD,IAAK,kBAAmBC,UAAW,qBACpC,CAACD,IAAK,YAAaC,UAAW,uBAENC,MAAK,SAASC,iBAClCC,MAAQD,YAAY,GACpBE,eAAiBF,YAAY,GAC7BG,WAAaH,YAAY,UACtB3B,aAAa+B,OAAO,CACvBH,MAAOA,MACPI,KAAMH,eACNI,KAAMjC,aAAakC,MAAMC,cAC1BT,MAAK,SAASU,cACbA,MAAMC,kBAAkBP,YACxBM,MAAME,UAAUxB,GAAGb,YAAYsC,MAAM,eAC7BC,WAAa3C,EAAES,cACnBJ,UAAUuC,OAAOlC,kBAAmB,CAACmC,SAAS,IAAOC,MAAK,SAASC,MAC/DJ,WAAWK,OAAOD,UACdE,QAAU,CACVC,WAAY1C,sBACZ2C,KAAM,CACF5B,SAAUA,WAGlBrB,KAAKkD,KAAK,CAACH,UAAU,GAAGH,MAAK,eACrBG,QAAU,CACVC,WAAY1C,wBACZ2C,KAAM,IAGVjD,KAAKkD,KAAK,CAACH,UAAU,GAAGH,MAAK,SAASO,cAC9BC,SAAW5C,gBACfL,UAAUuC,OAAOU,SAAUD,UAAUP,MAAK,SAASC,KAAMQ,IACrDZ,WAAWI,KAAKA,MAChB1C,UAAUmD,cAAcD,IACxBE,SAASC,eAEdC,KAAKrD,aAAasD,cACtBD,KAAKrD,aAAasD,iBAG7BrB,MAAME,UAAUxB,GAAGb,YAAYyD,QAAQ,WACnCtB,MAAMuB,aAEHvB,YAEZO,MAAK,SAASP,OACbA,MAAMwB,UACPJ,KAAKrD,aAAasD,YAGlB,CAMHI,WAAY,SAASpD,iBACV,IAAID,MAAMC"}